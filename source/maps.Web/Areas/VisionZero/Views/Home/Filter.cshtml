@model maps.Web.Models.Info.VisualizationFilter
@{
    var currentUser = ((maps.Web.Controllers.BaseController)ViewContext.Controller).CurrentUser;
}
<div class="row">
    <div class="col-md-11">
        <div class="pull-right">
            @if (currentUser != null)
            {
                <div class="btn btn-primary btn-sm showTable" data-id="@Model.ID">
                    <span class="glyphicon glyphicon-list"></span>Table
                </div>
            }
        </div>
        <div class="text-info" id="CountWrapper"></div>
        <div class="text-info" id="CountFailedWrapper"></div>
        <form class="form" id="FilterForm">
            @Html.Hidden("ID", Model.ID)
            @{
                var i = 0;
            }
            <div class="form-group">
                <div>
                    @Html.TextBox("SearchString", Model.SearchString, new { @class = "form-control", placeholder = "Search string" })
                </div>
            </div>
            @foreach (var field in Model.Fields)
            {
                @Html.Hidden("Fields.index", i)
                @Html.Hidden("Fields[" + i + "].Name", field.Name)
                @Html.Hidden("Fields[" + i + "].Type", field.Type)
                switch (field.Type)
                {
                    case VisualizationColumn.VisualizationType.Date:
                        <div class="form-group">
                            <label class="control-label">
                                @field.Name
                            </label>
                            <div class="row">
                                <div class="col-sm-5">
                                    @Html.TextBox("Fields[" + i + "].StartDate", field.StartDate, new { @class = "form-control datepicker", placeholder = "Start Date" })
                                </div>
                                <div class="col-sm-5">
                                    @Html.TextBox("Fields[" + i + "].EndDate", field.EndDate, new { @class = "form-control datepicker", placeholder = "End Date" })
                                </div>
                            </div>
                        </div>
                        break;
                    case VisualizationColumn.VisualizationType.Time:
                    <div class="form-group">
                        <label class="control-label">
                            @field.Name
                        </label>
                        <div class="row">
                            <div class="col-sm-5">
                                @Html.TextBox("Fields[" + i + "].StartTime", field.StartTime, new { @class = "form-control", placeholder = "Start Time" })
                            </div>
                            <div class="col-sm-5">
                                @Html.TextBox("Fields[" + i + "].EndTime", field.EndTime, new { @class = "form-control", placeholder = "End Time" })
                            </div>
                        </div>
                    </div>
                        break;
                    case VisualizationColumn.VisualizationType.List:
                    <div class="form-group">
                        <label class="control-label">
                            @field.Name
                        </label>
                        <div>
                            @Html.DropDownList("Fields[" + i + "].Value", field.SelectListValue, new { @class = "form-control" })
                        </div>
                    </div>
                        break;
                }
                i++;
            }
            <div class="form-group">
                <button id="SubmitFilter" class="btn btn-primary" data-id="@Model.ID">Submit</button>
                @if (currentUser != null && currentUser.HasVisualizationAccess(Model.ID))
                {
                    <button class="btn btn-primary btn-sm pull-right" id="ShakePointsBtn" data-id="@Model.ID">Shake</button>
                }
            </div>
        </form>
    </div>
</div>